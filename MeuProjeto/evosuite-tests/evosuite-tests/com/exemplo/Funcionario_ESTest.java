/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 12 17:59:13 GMT 2024
 */

package com.exemplo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.exemplo.Avaliacao;
import com.exemplo.Funcionario;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Funcionario_ESTest extends Funcionario_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario((String) null, "{RUXx", linkedList0);
      String string0 = funcionario0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("com.exemplo.Funcionario", "com.exemplo.Funcionario", linkedList0);
      String string0 = funcionario0.getNome();
      assertEquals("com.exemplo.Funcionario", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario(")|)", (String) null, linkedList0);
      String string0 = funcionario0.getCargo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      String string0 = funcionario0.getCargo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("^91oM8iCY", "", (List<Avaliacao>) null);
      funcionario0.getAvaliacoes();
      assertEquals("", funcionario0.getCargo());
      assertEquals("^91oM8iCY", funcionario0.getNome());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Avaliacao avaliacao0 = new Avaliacao(0.0, false, 2727.9139);
      linkedList0.add(avaliacao0);
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      List<Avaliacao> list0 = funcionario0.getAvaliacoes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Avaliacao avaliacao0 = new Avaliacao(2727.9139, true, 2727.9139);
      linkedList0.add(avaliacao0);
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      double double0 = funcionario0.calcularMediaDesempenho();
      assertEquals(2727.9139, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Avaliacao avaliacao0 = new Avaliacao((-2198.8445), true, (-1054.35));
      linkedList0.add(avaliacao0);
      Funcionario funcionario0 = new Funcionario("com.exemplo.Funcionario", "com.exemplo.Funcionario", linkedList0);
      double double0 = funcionario0.calcularMediaDesempenho();
      assertEquals((-2198.8445), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      linkedList0.add((Avaliacao) null);
      Funcionario funcionario0 = new Funcionario(">nvAsoCtE^x>t", ">nvAsoCtE^x>t", linkedList0);
      // Undeclared exception!
      try { 
        funcionario0.calcularMediaDesempenho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.exemplo.Funcionario", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Avaliacao avaliacao0 = new Avaliacao(0.0, false, 2727.9139);
      linkedList0.add(avaliacao0);
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      double double0 = funcionario0.calcularMediaDesempenho();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      double double0 = funcionario0.calcularMediaDesempenho();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      List<Avaliacao> list0 = funcionario0.getAvaliacoes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("", "", linkedList0);
      String string0 = funcionario0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Avaliacao> linkedList0 = new LinkedList<Avaliacao>();
      Funcionario funcionario0 = new Funcionario("W5bo}<' }uKHag", "W5bo}<' }uKHag", linkedList0);
      String string0 = funcionario0.getCargo();
      assertEquals("W5bo}<' }uKHag", string0);
  }
}
